{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/bengarlock/WebstormProjects/portfolio_website_v2/src/Cards/Techstack.js\";\nimport React from 'react';\nimport \"../stylesheets/Techstack.css\";\nimport ReactTimeout from 'react-timeout';\n\nclass Techstack extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      boxes: ''\n    };\n\n    this.componentDidMount = () => {\n      this.setState({\n        boxes: document.getElementsByClassName(\"tech-bubble\")\n      });\n    };\n\n    this.randomColor = () => {\n      const colors = [\"#003f5f\", \"#4961b3\", \"#71749f\", \"#1c267a\", \"#53a2ca\", \"#6e7de2\", \"#19075f\", \"#294983\", \"#4f34a5\", \"#2e385d\", \"#075075\", \"#49518d\", \"#00a6ff\", \"#2a359b\", \"#125456\", \"#40355b\"];\n      const min = 0;\n      const max = Math.floor(colors.length);\n      const number = Math.floor(Math.random() * (max - min) + min);\n      return colors[number];\n    };\n\n    this.hoverBackground = e => {\n      const boxes = [...this.state.boxes];\n      boxes.map(box => {\n        let newColor = this.randomColor();\n\n        if (newColor !== box.style.backgroundColor) {\n          box.style.backgroundColor = newColor;\n        } else {\n          this.hoverBackground(e);\n        }\n      });\n      e.target.style.backgroundColor = this.randomColor();\n    };\n\n    this.setTimer = () => {\n      let interval = setInterval(() => {\n        const now = new Date().getTime();\n        const seconds = Math.floor(now % (1000 * 60 * 60 * 24));\n      }, 1000);\n      console.log(interval);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tech-bubble\",\n      onMouseOver: this.hoverBackground,\n      style: {\n        backgroundColor: this.randomColor()\n      },\n      children: [this.props.technology.name, this.setTimer()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Techstack;","map":{"version":3,"sources":["/Users/bengarlock/WebstormProjects/portfolio_website_v2/src/Cards/Techstack.js"],"names":["React","ReactTimeout","Techstack","Component","state","boxes","componentDidMount","setState","document","getElementsByClassName","randomColor","colors","min","max","Math","floor","length","number","random","hoverBackground","e","map","box","newColor","style","backgroundColor","target","setTimer","interval","setInterval","now","Date","getTime","seconds","console","log","render","props","technology","name"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,8BAAP;AACA,OAAOC,YAAP,MAAyB,eAAzB;;AAGA,MAAMC,SAAN,SAAwBF,KAAK,CAACG,SAA9B,CAAwC;AAAA;AAAA;AAAA,SAEpCC,KAFoC,GAE5B;AACJC,MAAAA,KAAK,EAAE;AADH,KAF4B;;AAAA,SAMpCC,iBANoC,GAMhB,MAAM;AACtB,WAAKC,QAAL,CAAc;AACVF,QAAAA,KAAK,EAAEG,QAAQ,CAACC,sBAAT,CAAgC,aAAhC;AADG,OAAd;AAGH,KAVmC;;AAAA,SAYpCC,WAZoC,GAYtB,MAAM;AAChB,YAAMC,MAAM,GAAG,CACX,SADW,EACA,SADA,EAEX,SAFW,EAEA,SAFA,EAGX,SAHW,EAGA,SAHA,EAIX,SAJW,EAIA,SAJA,EAKX,SALW,EAKA,SALA,EAMX,SANW,EAMA,SANA,EAOX,SAPW,EAOA,SAPA,EAQX,SARW,EAQA,SARA,CAAf;AAWA,YAAMC,GAAG,GAAG,CAAZ;AACA,YAAMC,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWJ,MAAM,CAACK,MAAlB,CAAZ;AACA,YAAMC,MAAM,GAAGH,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACI,MAAL,MAAiBL,GAAG,GAAGD,GAAvB,IAA8BA,GAAzC,CAAf;AACA,aAAOD,MAAM,CAACM,MAAD,CAAb;AACH,KA5BmC;;AAAA,SA+BpCE,eA/BoC,GA+BjBC,CAAD,IAAO;AACrB,YAAMf,KAAK,GAAG,CAAC,GAAG,KAAKD,KAAL,CAAWC,KAAf,CAAd;AACAA,MAAAA,KAAK,CAACgB,GAAN,CAAUC,GAAG,IAAI;AACb,YAAIC,QAAQ,GAAG,KAAKb,WAAL,EAAf;;AACA,YAAIa,QAAQ,KAAKD,GAAG,CAACE,KAAJ,CAAUC,eAA3B,EAA4C;AACxCH,UAAAA,GAAG,CAACE,KAAJ,CAAUC,eAAV,GAA4BF,QAA5B;AACH,SAFD,MAEO;AACH,eAAKJ,eAAL,CAAqBC,CAArB;AACH;AACJ,OAPD;AAQAA,MAAAA,CAAC,CAACM,MAAF,CAASF,KAAT,CAAeC,eAAf,GAAiC,KAAKf,WAAL,EAAjC;AACH,KA1CmC;;AAAA,SA4CpCiB,QA5CoC,GA4CzB,MAAM;AACb,UAAIC,QAAQ,GAAGC,WAAW,CAAC,MAAM;AAC7B,cAAMC,GAAG,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAZ;AACA,cAAMC,OAAO,GAAGnB,IAAI,CAACC,KAAL,CAAWe,GAAG,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAArB,CAAd,CAAhB;AACH,OAHyB,EAGvB,IAHuB,CAA1B;AAKAI,MAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ;AACH,KAnDmC;AAAA;;AAuDpCQ,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAA6B,MAAA,WAAW,EAAE,KAAKjB,eAA/C;AACK,MAAA,KAAK,EAAE;AACHM,QAAAA,eAAe,EAAE,KAAKf,WAAL;AADd,OADZ;AAAA,iBAKK,KAAK2B,KAAL,CAAWC,UAAX,CAAsBC,IAL3B,EAMK,KAAKZ,QAAL,EANL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH;;AAlEmC;;AAqExC,eAAezB,SAAf","sourcesContent":["import React from 'react'\nimport \"../stylesheets/Techstack.css\"\nimport ReactTimeout from 'react-timeout'\n\n\nclass Techstack extends React.Component {\n\n    state = {\n        boxes: '',\n    }\n\n    componentDidMount = () => {\n        this.setState({\n            boxes: document.getElementsByClassName(\"tech-bubble\"),\n        })\n    }\n\n    randomColor = () => {\n        const colors = [\n            \"#003f5f\", \"#4961b3\",\n            \"#71749f\", \"#1c267a\",\n            \"#53a2ca\", \"#6e7de2\",\n            \"#19075f\", \"#294983\",\n            \"#4f34a5\", \"#2e385d\",\n            \"#075075\", \"#49518d\",\n            \"#00a6ff\", \"#2a359b\",\n            \"#125456\", \"#40355b\",\n        ]\n\n        const min = 0\n        const max = Math.floor(colors.length)\n        const number = Math.floor(Math.random() * (max - min) + min);\n        return colors[number]\n    }\n\n\n    hoverBackground = (e) => {\n        const boxes = [...this.state.boxes]\n        boxes.map(box => {\n            let newColor = this.randomColor()\n            if (newColor !== box.style.backgroundColor) {\n                box.style.backgroundColor = newColor\n            } else {\n                this.hoverBackground(e)\n            }\n        })\n        e.target.style.backgroundColor = this.randomColor()\n    }\n\n    setTimer = () => {\n        let interval = setInterval(() => {\n            const now = new Date().getTime()\n            const seconds = Math.floor(now % (1000 * 60 * 60 * 24))\n        }, 1000)\n\n        console.log(interval)\n    }\n\n\n\n    render() {\n        return(\n            <div className=\"tech-bubble\" onMouseOver={this.hoverBackground}\n                 style={{\n                     backgroundColor: this.randomColor()\n                 }}\n            >\n                {this.props.technology.name}\n                {this.setTimer()}\n            </div>\n        )\n    }\n}\n\nexport default Techstack\n\n"]},"metadata":{},"sourceType":"module"}